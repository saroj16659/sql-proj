                        zomato project

CREATE TABLE golduser_signup(userid integer,gold_signup_date date); 

INSERT INTO goldusers_signup(userid,gold_signup_date) 
 VALUES (1,'09-22-2017'),
(3,'04-21-2017');


CREATE TABLE users(userid integer,signup_date date); 

INSERT INTO users(userid,signup_date) 
 VALUES (1,'09-02-2014'),
(2,'01-15-2015'),
(3,'04-11-2014');

CREATE TABLE sales(userid integer,created_date date,product_id integer); 

INSERT INTO sales(userid,created_date,product_id) 
 VALUES (1,'04-19-2017',2),
(3,'12-18-2019',1),
(2,'07-20-2020',3),
(1,'10-23-2019',2),
(1,'03-19-2018',3),
(3,'12-20-2016',2),
(1,'11-09-2016',1),
(1,'05-20-2016',3),
(2,'09-24-2017',1),
(1,'03-11-2017',2),
(1,'03-11-2016',1),
(3,'11-10-2016',1),
(3,'12-07-2017',2),
(3,'12-15-2016',2),
(2,'11-08-2017',2),
(2,'09-10-2018',3);

CREATE TABLE product(product_id integer,product_name text,price integer); 

INSERT INTO product(product_id,product_name,price) 
 VALUES
(1,'p1',980),
(2,'p2',870),
(3,'p3',330);


select * from sales;
select * from product;
select * from goldusers_signup;
select * from users;

Q 1-What is a total amount each customer spend on zomato

select a.userid,sum(b.price)total_amount from sales a inner join product b on a.product_id=b.product_id group by userid
Q 2- How many days each coustomer visited zomato

select userid,count(created_date)customer_visited from sales group by userid
Q 3- What was first_rank product purchase by each customer

select*,rank()over(partition by userid order by product_id)rnk from sales

Q 4-What was the most purchase item on the menu and how many times

select product_id,count(product_id)most_purchase from sales group by product_id

Q 5)which item was the most popular for each customer

select*from
(select*,rank()over(partition by userid order by most_purchase desc)rnk from
(select userid,product_id,count(product_id)most_purchase from sales group by userid,product_id)a)b where rnk=1

Q 6-which item was purchase first by the customer after they become a member


select*from
(select*,rank()over(partition by userid order by gold_signup_date)rnk from
(select a.userid,a.product_id,a.created_date,b.gold_signup_date from sales a inner join goldusers_signup b on a.userid=b.userid
and created_date>=gold_signup_date)a)b where rnk=1

Q-7)which item was purchase first by the customer before they become a member

select*from
(select*,rank()over(partition by userid order by gold_signup_date)rnk from
(select a.userid,a.product_id,a.created_date,b.gold_signup_date from sales a inner join goldusers_signup b on a.userid=b.userid
and created_date<=gold_signup_date)a)b where rnk=1

Q-8)What is the total order and amout spent for each member

select userid,count(created_date)total_order,sum(price)total_amt from
(select c.*,d.price from
(select a.userid,a.product_id,a.created_date,b.gold_signup_date from sales a inner join goldusers_signup b on a.product_id=b.userid )c
inner join product d on c.product_id=d.product_id)e group by userid

Q 9) If buying each product genarate points for 5rs=1 Blinkit point and product has diffrent points 
p1=5rs
p2=10 rs
p3=5rs

select userid ,sum(total_points)total_points_earned from
(select e.* ,amt/point as total_points from
(select d.*,case when product_id=1 then 5 when product_id=2 then 10 when product_id=3 then 5 else 0 end as point from 
(select c.userid,c.product_id,sum(price)amt from
(select a.*,b.price from sales a inner join product b on a.product_id=b.product_id)c group by userid,product_id)d)e)f group by userid

Q 10) rank all the transaction of the coustomer

select*,rank()over(partition by userid order by created_date)rnk from sales
Q 11) Rank all the transaction for each member whenever they are a Blinkit gold member for every transaction mark as NA

select c.*,case when gold_signup_date is null then 0 else rank()over(partition by userid order by created_date desc)end as rnk from
(select a.userid,a.created_date,a.product_id,b.gold_signup_date from sales a left join goldusers_signup b on a.userid=b.userid
and created_date>=gold_signup_date)c


